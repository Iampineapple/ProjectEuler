#!/usr/bin/env python

#Project Euler Problem 2
#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
#Program accomplishes this by calculating Fibonacci numbers, in order, 
#until their value exceeds 4 million.  If a given Fibonacci number is even,
#it is added to the total.
#Fibonacci intentionally not implemented as a seperate method due to slow algorithm
#Better algorithm only looking at even numbers taken from http://www.mathblog.dk/project-euler-problem-2/


#fib3 is short for f_(n-3), etc
fib3 = 2
fib6 = 0
result = 2
summed = 0

while(result < 4000000):
	summed += result
	
	result = 4*fib3 + fib6
	fib6 = fib3
	fib3 = result
	
print "The total is ", summed
raw_input("Press any key to exit")